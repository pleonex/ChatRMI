/*
 * Copyright (C) 2014 Benito Palacios Sánchez
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see http://www.gnu.org/licenses/.
 */

package cliente;

import comun.ClienteListener_I;
import java.io.IOException;
import java.rmi.RemoteException;
import javax.swing.JOptionPane;
import javax.swing.text.BadLocationException;
import javax.swing.text.html.HTMLDocument;

/**
 * Ventana de conversación.
 * 
 * @author Benito Palacios Sánchez
 */
public class ConversacionFrame extends javax.swing.JFrame implements ClienteListener_I {
    /** Formato con el que se muestran los mensajes. */
    private static final String MsgFormat = 
            "<div>" + 
            "<font color=\"%s\"><b>%s:</b> %s</font>" +
            "</div>";
    
    /** Cliente de chat. */
    private Cliente cliente;
    
    /** Nombre de usuario. */
    private String usuario;
    
    /**
     * Crea una nueva instancia de la clase.
     * 
     * @param host Host del registro.
     * @param port Puerto del registro.
     * @param usuario Nombre de usuario.
     */
    public ConversacionFrame(final String host, final int port, final String usuario) {
        initComponents();
        
        try {
            this.setTitle("Conversación de " + usuario);
            this.usuario = usuario;
            this.cliente = new Cliente(host, port, this.usuario, this);
        } catch (RemoteException ex) {
            System.err.println("[INICIO] ERROR " + ex.getMessage());
            JOptionPane.showMessageDialog(
                    null,
                    "Error al intentar registrarse en el servidor",
                    "Error",
                    JOptionPane.ERROR_MESSAGE
            );
            System.exit(1);
        }
        
        // Comprueba que está conectado
        if (!this.cliente.estaConectado()) {
            System.err.println("[INICIO] ERROR de conexión");
            JOptionPane.showMessageDialog(
                    null,
                    "Error de conexión",
                    "Error",
                    JOptionPane.ERROR_MESSAGE
            );
            System.exit(1);
        }
    }

    @Override
    public void recibe(String mensaje, String usuario) throws RemoteException {
        this.aniadeTexto(mensaje, usuario);
    }
    
    /**
     * Añade un texto a la caja de texto.
     * 
     * @param msg Mensaje a añadir.
     * @param usuario Usuario que ha enviado el mensaje.
     */
    public void aniadeTexto(String msg, String usuario) {
        try {
            if (msg.isEmpty())
                return;
            
            // Le damos formato al mensaje
            boolean soyYo  = usuario.equals(this.usuario);
            String color   = soyYo ? "red" : "green";
            String fullMsg = String.format(MsgFormat, color, usuario, msg);
            
            // Lo añadimos al documento
            HTMLDocument doc = (HTMLDocument)this.txtConversacion.getDocument();
            doc.insertBeforeEnd(doc.getDefaultRootElement(), fullMsg);
            
            // Baja la barra vertical al máximo - Autoscroll
            this.jScrollPane2.getVerticalScrollBar().setValue(
                    this.jScrollPane2.getVerticalScrollBar().getMaximum()
            );
            
            // Si ha sido este usuario quién añade el texto lo envía.
            if (soyYo) {
                // Envía el mensaje
                this.cliente.envia(this.txtMsg.getText());
                
                // Borra la caja de texto
                this.txtMsg.setText(""); 
            }
        } catch (BadLocationException | IOException ex) { 
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnEnviar = new javax.swing.JButton();
        txtMsg = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtConversacion = new javax.swing.JEditorPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        btnEnviar.setText("Enviar");
        btnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarActionPerformed(evt);
            }
        });

        txtMsg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMsgActionPerformed(evt);
            }
        });

        txtConversacion.setEditable(false);
        txtConversacion.setContentType("text/html"); // NOI18N
        jScrollPane2.setViewportView(txtConversacion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtMsg, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEnviar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEnviar)
                    .addComponent(txtMsg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarActionPerformed
        this.aniadeTexto(this.txtMsg.getText(), usuario);
    }//GEN-LAST:event_btnEnviarActionPerformed

    private void txtMsgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMsgActionPerformed
        this.aniadeTexto(this.txtMsg.getText(), usuario);
    }//GEN-LAST:event_txtMsgActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.cliente.desconecta();
        System.exit(0);
    }//GEN-LAST:event_formWindowClosing
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEnviar;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JEditorPane txtConversacion;
    private javax.swing.JTextField txtMsg;
    // End of variables declaration//GEN-END:variables
}
